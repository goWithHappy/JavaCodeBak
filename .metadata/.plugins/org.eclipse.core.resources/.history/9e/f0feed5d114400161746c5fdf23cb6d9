package core;
/**
 * 根据配置信息返回Query对象的工厂类
 * @author Admain
 *
 */
public class QueryFectory {
	private static QueryFectory factory=new QueryFectory();
	private static Query queryInstance=null;
	static{
		//得到配置文件中对应的class类
			try {
				Class c=Class.forName(DBManager.getConf().getQueryClass());
				queryInstance=(Query) c.newInstance();
			} catch (ClassNotFoundException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (InstantiationException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IllegalAccessException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
	}
	
	/**
	 * 根据不同的配置信息创建不同的Query对象(通过克隆模式来进行快速获取)
	 * @return
	 */
	public static Query createQuery(){
		try {
			return (Query) queryInstance.clone();
		} catch (CloneNotSupportedException e) {
			e.printStackTrace();
		}
		return null;
	}
}
